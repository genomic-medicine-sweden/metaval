{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/genomic-medicine-sweden/metaval/master/nextflow_schema.json",
    "title": "genomic-medicine-sweden/metaval pipeline parameters",
    "description": "nf-core/taxprofiler post processing",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row.",
                    "fa_icon": "fas fa-file-csv"
                },
                "taxid": {
                    "type": "string",
                    "description": "The taxonomy ID identified in the classification results, or a list of taxIDs separated by spaces.",
                    "fa_icon": "fas fa-list-alt"
                },
                "pathogens_genomes": {
                    "type": "string",
                    "format": "file-path",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "description": "Path to a concatenated genome file containing complete genomes from a list of viral pathogens.",
                    "fa_icon": "fas fa-dna"
                },
                "accession2taxid": {
                    "type": "string",
                    "format": "file-path",
                    "pattern": "^\\S+\\.map$",
                    "description": "Path to a file containing the accession IDs and corresponding taxIDs for each pathogen genome.",
                    "fa_icon": "fas fa-file-alt"
                },
                "perform_extract_reads": {
                    "type": "boolean",
                    "description": "Extract reads assigned to taxonomic IDs.",
                    "help_text": "Enable the option to extract reads assigned to taxonomic IDs based on results from `Kraken2`, `Centrifuge`, and `DIAMOND` classifiers.",
                    "fa_icon": "fas fa-toggle-on"
                },
                "extract_kraken2_reads": {
                    "type": "boolean",
                    "description": "Extract reads classified by kraken2 according to taxonomic ID.",
                    "fa_icon": "fas fa-toggle-on"
                },
                "extract_centrifuge_reads": {
                    "type": "boolean",
                    "description": "Extract reads classified by centrifuge according to taxonomic ID.",
                    "fa_icon": "fas fa-toggle-on"
                },
                "extract_diamond_reads": {
                    "type": "boolean",
                    "description": "Extract reads classified by diamond according to taxonomic ID.",
                    "fa_icon": "fas fa-toggle-on"
                },
                "fastq_output": {
                    "type": "boolean",
                    "description": "Turn on saving extracted kraken2 reads in FASTQ format.",
                    "fa_icon": "fas fa-file-alt"
                },
                "evalue": {
                    "type": ["number", "integer"],
                    "description": "A Expected value to report an alignment.",
                    "help": "The default e-value is 0.001 (high sensitivity, lower specificity) when running DIAMOND/BLASTX. An e-value between 1e-10 and 1e-5 represents moderate filtering (balanced sensitivity and specificity). An e-value < 1e-20 is considered strict filtering (high specificity, lower sensitivity).",
                    "fa_icon": "fas fa-greater-than-equal"
                },
                "perform_shortread_denovo": {
                    "type": "boolean",
                    "description": "Turn on de novo assembly for short reads",
                    "fa_icon": "fas fa-times"
                },
                "perform_longread_denovo": {
                    "type": "boolean",
                    "description": "Turn on de novo assembly for long reads",
                    "fa_icon": "fas fa-times"
                },
                "flye_mode": {
                    "type": "string",
                    "description": "It provides `Flye` assembly modes. Our ONT reads were pre-processed by Guppy, so `--nano-corr` is the appropriate mode to use, as it is designed for ONT reads that have been corrected with other methods (with <3% error)",
                    "default": "--nano-corr",
                    "fa_icon": "fas fa-cogs"
                },
                "perform_screen_pathogens": {
                    "type": "boolean",
                    "description": "Screen viral pathogens for each sample",
                    "help_text": "Turn on the option to screen viral pathogens by mapping reads against genomes of a list of viral pathogens. `Bowtie2` is used for mapping of short reads and `minimap2` for long reads.",
                    "fa_icon": "fas fa-toggle-on"
                },
                "min_read_counts": {
                    "type": "integer",
                    "description": "Set the read count threshold for performing de novo assembly or consensus calling.",
                    "help_text": "The recommended default should be > 100, as de novo assembly will fail with too few reads or reads.",
                    "fa_icon": "fas fa-greater-than-equal"
                },
                "perform_longread_consensus": {
                    "type": "boolean",
                    "description": "Call consensus for long reads mapped to a pathogen genome.",
                    "help_text": "Turn on the option to call consensus for long reads mapped to a pathogen genome.",
                    "fa_icon": "fas fa-toggle-on"
                },
                "longread_consensus_tool": {
                    "type": "string",
                    "enum": ["medaka", "samtools"],
                    "description": "Specify the tool used for consensus calling of long reads.",
                    "help_text": "`medaka` is a tool designed for generating consensus sequences from nanopore sequencing data, and it uses a neural network to correct sequencing errors, improving the accuracy of consensus sequences. However `samtools consensus` does not have a specific algorithm tailored for nanopore reads.",
                    "fa_icon": "fas fa-tools"
                },
                "perform_shortread_consensus": {
                    "type": "boolean",
                    "description": "Call consensus for short reads mapped to a pathogen genome.",
                    "help_text": "Turn on the option to call consensus for short reads mapped to a pathogen genome using`samtools consensus`",
                    "fa_icon": "fas fa-toggle-on"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/genomic-medicine-sweden/test-datasets/333a4af341ac9cba6106e6ebd295fc64e28d58bd/",
                    "hidden": true
                },
                "trace_report_suffix": {
                    "type": "string",
                    "fa_icon": "far calendar",
                    "description": "Suffix to add to the trace report filename. Default is the date and time in the format yyyy-MM-dd_HH-mm-ss.",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ]
}
